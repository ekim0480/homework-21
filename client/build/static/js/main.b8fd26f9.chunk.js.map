{"version":3,"sources":["components/Nav/index.js","components/SearchInput/index.js","utils/API.js","pages/Search.js","components/SavedDiv/index.js","pages/Saved.js","components/Header/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","className","to","id","SearchInput","props","type","SearchBtn","children","onClick","join","userInput","axios","get","data","post","delete","Search","state","search","results","handleFormSubmit","event","preventDefault","API","then","res","setState","items","handleInputChange","target","value","this","placeholder","name","onChange","map","console","log","volumeInfo","title","authors","description","alt","src","imageLinks","thumbnail","href","infoLink","image","link","catch","err","Component","SavedDiv","Saved","saved","renderSaved","_id","Header","class","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b8fd26f9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Books App\n      </Link>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">\n              Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/saved\">\n              Saved\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n// This component lets us use a bootstrap input element without worrying about class names\r\n// or manually wrapping the input with a form-group div\r\n// All of the props passed to this component are spread onto the input element\r\nexport function SearchInput(props) {\r\n    return (\r\n        <div className=\"input-group input-group-lg\">\r\n            <input className=\"form-control\" type=\"text\" {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\n// Destructuring the type, className, children and onClick props, applying them to the button element\r\nexport function SearchBtn({ type = \"default\", className, children, onClick }) {\r\n    return (\r\n        <button onClick={onClick} className={[\"search btn btn-lg\", `btn-${type}`, className].join(\" \")}>\r\n            {children}\r\n        </button>\r\n    );\r\n}","import axios from \"axios\";\n\n// api url obtained from https://developers.google.com/books/docs/v1/using\nconst URL = 'https://www.googleapis.com/books/v1/volumes?q='\n\nexport default {\n  \n    search: function(userInput) {\n        return axios.get(URL + userInput)\n    },\n    getBooks: () => {\n        return axios.get('api/books')\n    },\n    saveBook: function(data) {\n        return axios.post('api/books', data)\n    },\n    deleteBook: function(id) {\n        return axios.delete('api/books/' + id)\n    } \n}","import React, { Component } from 'react'\nimport { SearchInput, SearchBtn } from \"../components/SearchInput\"\nimport API from '../utils/API'\n\nclass Search extends Component {\n    state = {\n        search: \"\",\n        results: [],\n    };\n\n    // runs search call to googlebooks api and updates state with results\n    handleFormSubmit = event => {\n        event.preventDefault();\n        // console.log('im here')\n        API.search(this.state.search)\n            .then(res => {       \n                this.setState({ results: res.data.items });\n                // console.log(res.data.items)\n        });       \n    };\n\n    // listens for change to input field and updates state\n    handleInputChange = event => {\n        event.preventDefault()\n        this.setState({ search: event.target.value })\n        // console.log(this.state)\n    }\n\n \n\n    render() {\n        return (\n            <>\n                <div>\n                    <SearchInput\n                        value={this.state.search}\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"searchInput\"\n                        placeholder=\"Search GoogleBooks\"\n                        name=\"search\"\n                        onChange={this.handleInputChange}\n                    />\n                    <SearchBtn\n                        id=\"searchBtn\"\n                        className=\"btn btn-primary\"\n                        type=\"submit\"\n                        onClick={this.handleFormSubmit}\n                    >\n                        Search\n                    </SearchBtn>\n                </div>\n                <div className='container'>\n                    <div className='card'>\n                        {\n                            // console.log('results', this.state.results)\n                            this.state.results.map(data => {\n                                console.log(data)\n                                return (\n\n                                    \n                                    \n                                    <ul>\n                                        <li\n                                        // key = {data.id}\n                                        // title = {data.volumeInfo.title}\n                                        // authors = {data.volumeInfo.authors}\n                                        // description = {data.volumeInfo.description}\n                                        // image = {data.volumeInfo.imageLinks.thumbnail}\n                                        // link = {data.volumeInfo.infoLink}\n                                        >\n                                            {/* {console.log(data.id)} */}\n                                            <p>{data.volumeInfo.title}</p>\n                                            <p>{data.volumeInfo.authors}</p>\n                                            <p>{data.volumeInfo.description}</p>\n                                            <img alt=\"\" src={data.volumeInfo.imageLinks.thumbnail} />\n                                            <br></br>\n                                            <a href={data.volumeInfo.infoLink}>Link</a>\n                                            <button onClick={function(event) {\n                                                event.preventDefault()\n                                                console.log(data)\n                                                API.saveBook({\n                                                    authors: data.volumeInfo.authors,\n                                                    description: data.volumeInfo.description,\n                                                    image: data.volumeInfo.imageLinks.thumbnail,\n                                                    link: data.volumeInfo.infoLink,\n                                                    title: data.volumeInfo.title\n                                                }).then(res => console.log(res)\n                                                ).catch(err => console.log(err))\n                                            }}>Save</button>\n                                        </li>\n                                    </ul>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Search ","import React from \"react\";\nimport \"./style.css\";\n\nfunction SavedDiv() {\n    return (\n        <div className='container' id='searchedWrapper'>\n            saved div\n        </div>    \n    )\n}\n\nexport default SavedDiv","import React, { Component } from 'react'\nimport SavedDiv from '../components/SavedDiv'\nimport API from '../utils/API'\n\nclass Saved extends Component {\n    state = {\n        saved: []\n    }\n\n    renderSaved = event => {\n        API.getBooks()\n        .then(res => {\n            this.setState({ saved: res.data })\n            console.log(res.data)\n        })\n    }\n\n    componentDidMount() {\n        this.renderSaved()\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                {\n                    this.state.saved.map(data => {\n                        // console.log('response', data)\n                        return (\n                            <ul>\n                                <li>\n                                    <p>{data.title}</p>\n                                    <p>{data.authors}</p>\n                                    <p>{data.description}</p>\n                                    <img alt=\"\" src={data.image} />\n                                    <a href={data.link}>Link</a>\n                                    <button onClick={function() {\n                                        console.log('trying to delete', data)\n                                        API.deleteBook(data._id)\n                                        .then(res => {\n                                            console.log('res', res)\n                                            console.log('deleting', data._id)\n                                        })\n                                    }}>delete</button>\n                                </li>\n                            </ul>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Saved\n\n{/* <div className='container'> */}\n            {/* <button onClick={function(event){\n                event.preventDefault()\n                API.getBooks()\n                .then(res => {\n                    console.log(res.data)\n                })\n            }}>get books</button> */}\n            // <ul>\n                // <li>\n\n                // </li>\n            // </ul>\n        // </div>","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n        <div className=\"container-flex\">\n            <div class=\"jumbotron\">\n                <h1 class=\"display-4\">(React) Google Books Search</h1>\n                <p class=\"lead\">Search for and save books of interest.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from './components/Nav'\nimport Search from './pages/Search'\nimport Saved from './pages/Saved'\nimport Header from './components/Header'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Header />\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <Search />\n        </Route>\n        <Route exact path='/saved'>\n          <Saved />\n        </Route>\n      </Switch>\n\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}